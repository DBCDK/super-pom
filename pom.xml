<project>
  <modelVersion>4.0.0</modelVersion>

  <groupId>dk.dbc</groupId>
  <artifactId>super-pom</artifactId>
  <version>java11-old-202447</version>
  <packaging>pom</packaging>

  <distributionManagement>
    <repository>
      <id>mavenrepo.dbc.dk</id>
      <name>mavenrepo</name>
      <url>https://mavenrepo.dbc.dk/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>mavenrepo.dbc.dk</id>
      <name>mavenrepo</name>
      <url>https://mavenrepo.dbc.dk/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>mavenrepo.dbc.dk</id>
      <url>https://mavenrepo.dbc.dk/nexus/content/groups/public</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>mavenrepo.dbc.dk</id>
      <url>https://mavenrepo.dbc.dk/nexus/content/groups/public</url>
    </pluginRepository>
  </pluginRepositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdk.target.version>11</jdk.target.version>

    <eclipselink.version>4.0.1</eclipselink.version>
    <flyway.version>9.22.3</flyway.version>
    <graalvm.polyglot.version>23.1.2</graalvm.polyglot.version>
    <hazelcast.version>5.3.6</hazelcast.version>
    <jackson.version>2.17.1</jackson.version>
    <jakartaee.version>10.0.0</jakartaee.version>
    <jakarta-xml-bind.version>4.0.1</jakarta-xml-bind.version>
    <jcache.version>1.1.1</jcache.version>
    <jersey.version>3.1.5</jersey.version>
    <kafka.version>3.7.1</kafka.version>
    <logback.version>1.2.11</logback.version>
    <microprofile.version>6.1</microprofile.version>
    <microprofile-config-api.version>3.1</microprofile-config-api.version>
    <microprofile-fault-tolerance-api.version>4.0.2</microprofile-fault-tolerance-api.version>
    <microprofile-health-api.version>4.0.1</microprofile-health-api.version>
    <microprofile-metrics-api.version>5.1.0</microprofile-metrics-api.version>
    <microprofile-jwt-auth-api.version>2.1</microprofile-jwt-auth-api.version>
    <microprofile-openapi-api.version>3.1.1</microprofile-openapi-api.version>
    <microprofile-rest-client-api.version>3.0.1</microprofile-rest-client-api.version>
    <microprofile-opentracing-api.version>3.0</microprofile-opentracing-api.version>
    <postgresql-driver.version>42.7.3</postgresql-driver.version>
    <slf4j.version>1.7.36</slf4j.version>
    <smallrye-graphql.version>2.8.6</smallrye-graphql.version>
    <snakeyaml.version>2.2</snakeyaml.version>

    <!-- ### test scoped dependencies ### -->

    <hamcrest.version>2.2</hamcrest.version>
    <junit4.version>4.13.2</junit4.version>
    <junit5.version>5.10.3</junit5.version>
    <mockito.version>5.12.0</mockito.version>
    <testcontainers.version>1.19.8</testcontainers.version>
    <wiremock.version>3.8.0</wiremock.version>

    <!-- spotbugs is to be deprecated in favor of sonarqube -->
    <spotbugs.plugin.version>4.7.3.6</spotbugs.plugin.version>
    <spotbugs.annotations.version>4.8.0</spotbugs.annotations.version>

    <!-- ### sonarqube properties ### -->
    <sonar.host.url>https://sonarqube.dbc.dk</sonar.host.url>
    <sonar.sources>src/main</sonar.sources>
    <sonar.java.binaries>target</sonar.java.binaries>
  </properties>

  <dependencyManagement>
    <dependencies>

      <!-- ### provided scoped dependencies ### -->

      <dependency>
        <groupId>jakarta.platform</groupId>
        <artifactId>jakarta.jakartaee-api</artifactId>
        <version>${jakartaee.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>jakarta.platform</groupId>
        <artifactId>jakarta.jakartaee-core-api</artifactId>
        <version>${jakartaee.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>jakarta.platform</groupId>
        <artifactId>jakarta.jakartaee-web-api</artifactId>
        <version>${jakartaee.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- Baseline platform definition that optimizes Enterprise Java for a microservices architecture -->
      <dependency>
        <groupId>org.eclipse.microprofile</groupId>
        <artifactId>microprofile</artifactId>
        <type>pom</type>
        <version>${microprofile.version}</version>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.config</groupId>
        <artifactId>microprofile-config-api</artifactId>
        <version>${microprofile-config-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.fault-tolerance</groupId>
        <artifactId>microprofile-fault-tolerance-api</artifactId>
        <version>${microprofile-fault-tolerance-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.health</groupId>
        <artifactId>microprofile-health-api</artifactId>
        <version>${microprofile-health-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.metrics</groupId>
        <artifactId>microprofile-metrics-api</artifactId>
        <version>${microprofile-metrics-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.jwt</groupId>
        <artifactId>microprofile-jwt-auth-api</artifactId>
        <version>${microprofile-jwt-auth-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.openapi</groupId>
        <artifactId>microprofile-openapi-api</artifactId>
        <version>${microprofile-openapi-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.rest.client</groupId>
        <artifactId>microprofile-rest-client-api</artifactId>
        <version>${microprofile-rest-client-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.opentracing</groupId>
        <artifactId>microprofile-opentracing-api</artifactId>
        <version>${microprofile-opentracing-api.version}</version>
        <scope>provided</scope>
      </dependency>


      <!-- ### compile/import/runtime scoped dependencies ### -->

      <dependency>
        <groupId>javax.cache</groupId>
        <artifactId>cache-api</artifactId>
        <version>${jcache.version}</version>
      </dependency>

      <!-- Jakarta XML binding -->
      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>${jakarta-xml-bind.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${jakarta-xml-bind.version}</version>
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <groupId>org.eclipse.persistence</groupId>
        <artifactId>eclipselink</artifactId>
        <version>${eclipselink.version}</version>
      </dependency>

      <!--  Version control for your database -->
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>${flyway.version}</version>
      </dependency>

      <dependency>
        <groupId>com.hazelcast</groupId>
        <artifactId>hazelcast</artifactId>
        <version>${hazelcast.version}</version>
      </dependency>

      <!-- Jackson is a high-performance JSON processor (parser, generator) -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-jaxb-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-xml</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <!-- Jersey is the JAX-RS reference implementation -->
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>${jersey.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-json-jackson</artifactId>
        <version>${jersey.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>${kafka.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql-driver.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-ext</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>io.smallrye</groupId>
        <artifactId>smallrye-graphql-servlet</artifactId>
        <version>${smallrye-graphql.version}</version>
      </dependency>
      <dependency>
        <groupId>io.smallrye</groupId>
        <artifactId>smallrye-graphql-ui-graphiql</artifactId>
        <version>${smallrye-graphql.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- SnakeYAML is required for the YAML conversion in Jackson -->
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>

      <!-- Polyglot applications -->

      <!-- All GraalVM embedded languages are now available as maven dependencies -->
      <dependency>
        <groupId>org.graalvm.polyglot</groupId>
        <artifactId>polyglot</artifactId>
        <version>${graalvm.polyglot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.graalvm.polyglot</groupId>
        <artifactId>js-community</artifactId>
        <version>${graalvm.polyglot.version}</version>
        <type>pom</type>
      </dependency>

      <!-- Standalone dependency for the legacy nashorn JavaScript engine (removed from the JDK from v15 an onwards)-->
      <dependency>
        <groupId>org.openjdk.nashorn</groupId>
        <artifactId>nashorn-core</artifactId>
        <version>15.4</version>
      </dependency>

      <!-- ### compile/import scoped dependencies ### -->

      <!-- Unit test matchers that can be combined to create flexible expressions of intent -->
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- old deprecated artifacts -->
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>1.3</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>1.3</version>
        <scope>test</scope>
      </dependency>

      <!-- v4 of framework of the xUnit architecture for unit testing frameworks -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit4.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- v5 of framework of the xUnit architecture for unit testing frameworks -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <type>import</type>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Mocking framework for unit tests -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- test containers -->
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>postgresql</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.wiremock</groupId>
        <artifactId>wiremock</artifactId>
        <version>${wiremock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>${spotbugs.annotations.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
        <version>9.0.1</version>
        <executions>
          <execution>
            <id>get-commit-info</id>
            <goals>
              <goal>revision</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
        <configuration>
          <failOnNoGitDirectory>false</failOnNoGitDirectory>
          <runOnlyOnce>true</runOnlyOnce>
          <skipPoms>false</skipPoms>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <!--
                      Apache Log4j2 vulnerability CVE-2021-44228
                      https://cve.mitre.org/cgi-bin/cvename.cgi?name=2021-44228
                    -->
                    <exclude>org.apache.logging.log4j:log4j-core:[0,2.17.0]</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
          <configuration>
            <source>${jdk.target.version}</source>
            <target>${jdk.target.version}</target>
            <testSource>${jdk.target.version}</testSource>
            <testTarget>${jdk.target.version}</testTarget>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Implementation-Build>${git.commit.id}@${git.branch}</Implementation-Build>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.21.0</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.9.1.2184</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
